// This file is part of the happyDomain (R) project.
// Copyright (c) 2020-2025 happyDomain
// Authors: Pierre-Olivier Mercier, et al.
//
// This program is offered under a commercial and under the AGPL license.
// For commercial licensing, contact us at <contact@happydomain.org>.
//
// For AGPL licensing:
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

//go:build ignore
// +build ignore

package main

import (
	"fmt"
	"io"
	"os"
	"time"

	"github.com/miekg/dns"
)

func nsrrtype(fd io.Writer) {
	fmt.Fprint(fd, "    switch (input) {\n")
	for ty, rr := range dns.TypeToString {
		fmt.Fprintf(fd, `        case "%d":
        case %d:
            return %q;
`, ty, ty, rr)
	}
	fmt.Fprint(fd, "        default:\n            return \"#\";\n    }\n")
}

func main() {
	output := os.Args[1]

	fd, err := os.Create(output)
	if err != nil {
		panic(err)
	}
	defer fd.Close()

	fmt.Fprint(fd, "// This file is generated by go generate\n// Last generation: "+time.Now().Format(time.UnixDate)+"\n\n")

	// nsrrtype
	fmt.Fprint(fd, "export function nsrrtype(input: number | string): string {\n")
	nsrrtype(fd)
	fmt.Fprint(fd, "};\n\n")
}
